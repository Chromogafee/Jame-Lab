if (typeof Object.create !== 'function') { Object.create = function (a) { function F() { }; F.prototype = a; return new F() } } (function (b, c, d) { var e = b.location.hostname.match(/(?:http[s]*\:\/\/)*(.*?)\.(?=[^\/]*\..{2,5})/i); var f = !((e || false) && (e[1] === 'www' || e[1] === 'wwwback')); var g = ((e || false) && (e[1] === 'dev' || e[1] === 'wwwback' || e[1] === 'myback2')); b.preURL = function (a) { return f ? ('http://' + (g ? 'wwwback' : 'www') + '.dek-d.com' + a) : (a) }; b.preJSON = function () { return 'json' } })(window, document); function use_IOListener(c) { if (typeof IOListener !== 'object') { $.getScript('http://www0.dek-d.com/assets/broadcast/js/IOListener.js').done(function (a, b) { if (typeof c === 'function') c(a, b) }) } else if (typeof c === 'function') { c() } } (function ($, p, q, r) { p.toolbar = (function () { var k; var l = false; var m = false; function dummy() { } function doAjax() { if (l) return false; l = true; $('#auth-frame .wait-loading').fadeIn(); return true } function doneAjax() { l = false; $('#auth-frame .wait-loading').hide() } function IOInterface(a) { if (typeof IOListener === 'undefined') { return null } else { switch (a) { case 'onload': IOListener.disable('.loadLogin'); break; case 'loaded': IOListener.construct(); IOListener.enable('.loadLogin'); break; case 'token': return IOListener.status().token } } } function script_action_redirect(a) { console.log('window.location = ' + a); p.location = a } var o = { init: function () { k = $('#toolbar'); this.bind(); this.auth(); this.bindProvider(); this.bindChangeProvince() }, bind: function () { this.bindDropdownPanel() }, auth: function (b) { var c = this; if (!doAjax()) return; $.ajax({ type: 'post', url: preURL('/auth/login2014/'), dataType: preJSON(), xhrFields: { withCredentials: true }, success: function (a) { $(q).ready(function () { console.log('auth-1-1-res', a); doneAjax(); if (a.status) { $("body").trigger('isLogin', [a.info]) } else { usermenu.title(0); if (a.action === 'redirect') { script_action_redirect(a.redirect); return } } if (a.content || false) { use_IOListener(function () { $('#usermenu').html(a.content) }) } if (typeof b === 'function') { b() } IOInterface('loaded') }) }, error: function () { }, complete: function () { doneAjax(); c.bind() } }) }, login: function (c, d, e, f) { var g = this, $err = $('#usermenu').find('.login-errMsg').hide(); if (!doAjax()) return; IOInterface('onload'); var h = k.find('.ddpanel').filter('.active'); o.hideDropdownPanel(); var j = {}; $.each($('#login-form').serializeArray(), function (i, n) { j[n.name] = n.value }); if (typeof c == 'string' && typeof d == 'string') { j['username'] = c; j['password'] = d } if (typeof e == 'boolean' && (e == true || e == 'on')) { j['rememberme'] = 'on' } j['NODESESSID'] = cookie.get('NODESESSID'); j['token'] = IOInterface('token'); $.ajax({ type: 'post', url: preURL('/auth/login2014/?force'), data: j, dataType: preJSON(), xhrFields: { withCredentials: true }, success: function (b) { doneAjax(); if (b.status) { use_IOListener(function () { var a = $('<div>' + b.content + '</div>').html(); $('#usermenu').html(a); usermenu.init(); $("body").trigger('isLogin', [b.info]); IOInterface('loaded') }) } else { $err.text(b.errMsg).fadeIn(); $('#usermenu').find('.ddpanel:not(.search-show)').first().addClass('active'); usermenu.title(0); if (b.action === 'redirect') { script_action_redirect(b.redirect); return } } if (typeof f === 'function') { f(b) } }, error: function () { }, complete: function () { doneAjax(); g.bind() } }) }, logout: function (b) { var c = this; if (!doAjax()) return; IOInterface('onload'); var d = k.find('.ddpanel').filter('.active'); o.hideDropdownPanel(); $.ajax({ type: 'post', url: preURL('/auth/logout2014/?force'), dataType: preJSON(), xhrFields: { withCredentials: true }, success: function (a) { doneAjax(); if (a.status) { use_IOListener(function () { $('#usermenu').html(a.content); $("body").trigger('isLogout', [a.info]); usermenu.title(0); IOInterface('loaded') }) } else { d.addClass('active') } if (typeof b === 'function') { b() } }, error: function () { }, complete: function () { doneAjax(); c.bind() } }) }, loginErr: function (a) { $('#usermenu').find('.login-errMsg').text(a).fadeIn() }, bindDropdownPanel: function () { var g = $('#toolbar'); var h = g.find('.ddpanel'); var i = h.find('a.btn'); var j = h.find('.bubble'); g.off('click', '.ddpanel a.btn').on('click', '.ddpanel a.btn', function (e) { e.preventDefault(); var a = g.find('.ddpanel'); var b = a.find('a.btn'); var c = a.find('.bubble'); var d = $(this).closest(a); var f = d.data('callback'); if (!d.hasClass('active')) { a.removeClass('active'); a.find('input[type=text]:visible').first().focus(); d.addClass('active'); m = true; if (typeof f == 'function') { f('show') } } else { d.removeClass('active'); m = false; if (typeof f == 'function') { f('hide') } } }); $(q).click(function (a) { var b = $(a.target).closest(h); if (!m || b.size() > 0) return; h.removeClass('active') }) }, bindProvider: function () { var c = this; var d; k.on('mouseenter mouseleave', '.menu-main', function (a) { var b = $(this); if (b.hasClass('submenu-more') && $(p).width() <= 768) { return } if (a.type == 'mouseenter') { d = setTimeout($.proxy(c, 'getProvider', b), 200) } else { clearTimeout(d) } }).on('click', '.submenu-more > .more-show', function () { var a = $(this).closest('.submenu-more'); if ($(p).width() <= 768) { if (a.hasClass('active')) { c.hideSubmenu(); a.removeClass('fixed') } else { c.getProvider(a); a.addClass('fixed') } } }).on('touchstart', '.menu-main:not(.submenu-more) > a', function (e) { var a = $(this).closest('.menu-main'); if (a.hasClass('active')) { c.hideSubmenu() } else { c.getProvider(a) } e.preventDefault() }).on('click', '.btn-other-subshow', function (e) { var a = $(this).closest('li'); var b = $(this).siblings('.other-subshow'); b.toggle(400); if (a.hasClass('active')) { a.removeClass('active') } else { a.siblings('.active').find('.other-subshow').toggle(400); a.siblings().removeClass('active'); a.addClass('active') } e.preventDefault() }).find('.menu-list').on('mouseleave', function () { var a = k.find('select:focus'); var b = k.find('.submenu-more.fixed'); if (a.length <= 0 && b.length <= 0) { c.hideSubmenu() } }) }, hideDropdownPanel: function () { k.find('.ddpanel').removeClass('active'); m = false }, getProvider: function (b) { var c = this; var d = b.find('.dynamic-section'); var e = b.find('.submenu-main'); b.siblings('.menu-main').removeClass('active').end().addClass('active'); if (k.data('slided') != '1') { k.data('slided', '1'); e.css({ transform: 'translate(0, -100%)', 'z-index': -1 }); e.animate({ transform: 'translateY(0)' }, { duration: 200 }) } if (d.length > 0 && b.data('initialized') != '1') { b.data('initialized', '1'); $.ajax({ url: preURL('/toolbar/provide/' + b.data('section') + '/'), dataType: preJSON(), success: function (a) { d.removeClass('loading-provider').empty().append(a.provide); switch (a.callback) { case 'tutorcenter': c.bindTutorCenter(a.config); break } } }) } }, hideSubmenu: function () { k.find('.menu-main').removeClass('active'); k.data('slided', '0') }, bindChangeProvince: function () { var d = $('#province-jumper'); $('body').on('isLogin', function (a, b) { var c = (b.province) ? b.province : 1; d.attr('href', 'http://www.dek-d.com/region/?province=' + c) }) }, bindTutorCenter: function (f) { var f = $.map(f, function (a, b) { return [a] }); var g = k.find('.service-education'); g.on('change', 'select[name="main"]', function () { var c = $(this); var d = c.val(); var e = '<option value="0">เน€เธฅเธทเธญเธเธงเธดเธเธฒ</option>'; if (d != 0) { $.each(f[1][d], function (a, b) { e += '<option value="' + a + '">' + b + '</option>' }) } g.find('select[name="sub"]').empty().append(e) }) }, loading: function () { doAjax() }, loaded: function () { doneAjax() }, test: function () { var c = this; var d; k.off('mouseenter mouseleave').on('mouseenter', '.menu-main', function (a) { var b = $(this); if (a.type == 'mouseenter') { d = setTimeout($.proxy(c, 'getProvider', b), 200) } else { clearTimeout(d) } }).find('.menu-list').on('mouseleave', function () { var a = k.find('select:focus'); if (a.length <= 0) { c.hideSubmenu() } }) } }; $(q).ready(function () { $('body').on('startLogin', function () { o.hideDropdownPanel(); $('#auth-frame .wait-loading').fadeIn() }) }); return Object.create(o) })() })(jQuery, window, document); function auth() { toolbar.auth() } function login(b, c, d, e) { toolbar.login(b, c, d, function (a) { if (typeof e === 'function') { e(a) } }) } function logout() { toolbar.logout() } function loadmenu(a) { toolbar.loaded(); toolbar.auth() } function noloadmenu(a) { toolbar.loaded(); toolbar.loginErr(a) } function makeTimesince() { $('.timesince:not(binded)').addClass('binded').timesince({ postpone: 1000 }) } window.___gcfg = { isSignedOut: true }; (function () { var a = document.createElement('script'); a.type = 'text/javascript'; a.async = true; a.src = 'https://apis.google.com/js/plusone.js?onload=renderGPlusLogin'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(a, s) })(); var dekdGoogle = { authData: null, page: '', init: function (a) { this.authData = a; return this }, setpage: function (a) { this.page = a; return this }, login: function (b) { var c = this; var d = this.authData['code']; $('body').trigger('startLogin', true); toolbar.loading(); $.ajax({ url: preURL('/auth/gpluslogin/'), data: { ajax: 1, code: d }, dataType: preJSON(), type: 'post', success: function (a) { if (a.status) { if (c.page == 'region' || c.page == 'board' || c.page == 'content' || c.page == 'abroad' || c.page == 'jamsai' || c.page == 'nugirl') { window.location.href = window.location.href } else { if (typeof b === 'function') b(c.page) } } else { window.open('http://www.dek-d.com/register/') } fb_auth.fbToggleState = false }, error: function (a) { if (typeof ddJSkit == 'undefined') alert('เน€เธเธดเธ”เธเนเธญเธเธดเธ”เธเธฅเธฒเธ” เธเธฃเธธเธ“เธฒเธฅเธญเธเนเธซเธกเนเธ เธฒเธขเธซเธฅเธฑเธ'); else ddJSkit.name('auth').error({ msg: 'เน€เธเธดเธ”เธเนเธญเธเธดเธ”เธเธฅเธฒเธ” เธเธฃเธธเธ“เธฒเธฅเธญเธเนเธซเธกเนเธ เธฒเธขเธซเธฅเธฑเธ' }); auth.ajaxing = false }, complete: function () { toolbar.loaded() } }) } }; function renderGPlusLogin() { if (typeof gapi === 'undefined' || typeof gapi.signin === 'undefined') { return } var a = { callback: 'callbackGPlusLogin', clientid: "897471588109.apps.googleusercontent.com", cookiepolicy: "single_host_origin", requestvisibleactions: "http://schemas.google.com/AddActivity", scope: "https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/plus.me https://www.googleapis.com/auth/userinfo.email" }; if ($('#gplusLoginBtn').data('bind') == 0 && typeof gapi !== 'undefined') { gapi.signin.render("gplusLoginBtn", a); $('#gplusLoginBtn').data('bind', 1) } var b = $('#googleOverlayLoginBtn .buttonText'); if (b.length) { b.text('เน€เธเธทเนเธญเธกเธ•เนเธญเธเธฑเธ Google'); gapi.signin.render("googleOverlayLoginBtn", a) } } function callbackGPlusLogin(a) { if (!a['g-oauth-window']) { return false } var b = $('#googleCustomLoginBtn').data('page'); if (a['access_token']) { dekdGoogle.init(a).setpage(b).login(function () { loadmenu() }) } else if (a['error']) { alert('เนเธกเนเธชเธฒเธกเธฒเธฃเธ–เน€เธเธทเนเธญเธกเธ•เนเธญเธเธฑเธ Google เนเธ”เน') } } (function ($, t, u, v) { function createObject(a) { function f() { }; f.prototype = a; return new f() } cookie = { set: function (a, b, c, d, e, f) { u.cookie = a + "=" + escape(b) + ((c) ? "; expires=" + c.toGMTString() : "") + ((d) ? "; path=" + d : "") + ((e) ? "; domain=" + e : "") + ((f) ? "; secure" : "") }, get: function (a) { var b = u.cookie; var c = a + "="; var d = b.indexOf("; " + c); if (d == -1) { d = b.indexOf(c); if (d != 0) return null } else { d += 2 } var e = u.cookie.indexOf(";", d); if (e == -1) { e = b.length } return unescape(b.substring(d + c.length, e)) }, remove: function (a, b, c) { if (this.get(a)) { u.cookie = a + "=" + ((b) ? "; path=" + b : "") + ((c) ? "; domain=" + c : "") + "; expires=Thu, 01-Jan-70 00:00:01 GMT" } } }; var w = { offset: 0, moreLimit: 20, hasMore: true }; function ajaxAPI(a) { var b = { url: preURL('/api/notification/ajax'), dataType: preJSON(), data: {}, xhrFields: { withCredentials: true } }; $.extend(b, a); $.ajax(b) } function getMoreNotify(b, c) { if (!w.hasMore) return; if (typeof c === 'undefined') { c = w.offset } ajaxAPI({ data: { request: 'notification.get', offset: c, render: 'html' }, success: function (a) { w.hasMore = a.status; w.offset = a.nextOffset; if (typeof b === 'function') b(a) }, error: function (e) { if (typeof b === 'function') b({ status: false, err: e }) } }) } function getFriendRequest(b, c) { ajaxAPI({ data: { request: 'self.friendRequest', offset: c }, success: function (a) { if (typeof b == 'function') b(a) } }) } function getMoreSecretMessage(b, c) { ajaxAPI({ data: { request: 'self.secretMessage', offset: c }, success: function (a) { if (typeof b === 'function') b(a) } }) } function clearUnreadStatus(b) { ajaxAPI({ data: { request: 'notification.seen' }, complete: function (a) { if (typeof b === 'function') b(a) } }) } function readNotify(b, c) { ajaxAPI({ data: { request: 'notification.read', id: b }, complete: function (a) { if (typeof c === 'function') c(a) } }) } function clearCountstory(b) { ajaxAPI({ data: { request: 'self.countstory.clear' }, complete: function (a) { if (typeof b === 'function') b(a) } }) } function makeHooknotify() { $('.hooknotify:not(binded)').addClass('binded').each(function () { var a = $(this); a.on('click', function (e) { if (e.button === 0 && !e.ctrlKey) { e.preventDefault(); t.location = 'http://www.dek-d.com/api/notification/l?url=' + a.attr('href') + '&id=' + a.data('id') } }) }) } t.usermenu = (function () { var i, $panel, $panel_self, $panel_notify, $btn, $bubble; var j, $sub1_panel, $sub1_viewport; var k, $notify_viewport; var l, $popup_panel; var m, $subcol_setting, $open_setting; var o = { self: true, notify: true }; var p = { resize: null, moreNotify: null, popup: null }; function query() { i = $('#usermenu'); $panel = i.find('.ddpanel'); $panel_self = i.find('.panel_self'); $panel_notify = i.find('.panel_noti'); $btn = $panel.find('a.btn'); $bubble = i.find('.summary-bubble'); j = $panel_self.find('.has-sub'); $sub1_panel = i.find('.sub1-panel'); $sub1_viewport = i.find('.viewport-slide'); k = i.find('.notify-ul'); $notify_viewport = i.find('#noti-screen .viewport-overflow'); l = i.find('.notify-ul_popup'); $popup_panel = i.find('.popup-panel'); m = i.find('.col-notify_diaplay'); $subcol_setting = i.find('.col-setting_panel'); $open_setting = i.find('.open-noti-setting_menu') } var q = { init: function () { o = { self: true, notify: true }; query(); this.bind(); this.title(); toolbar.bindDropdownPanel() }, reload: function () { w.offset = 0; w.hasMore = true; o = { self: true, notify: true }; k.empty(); function loadUntilEnought() { $notify_viewport.scrollTop(0); if (k.children().size() < 10) { q.moreNotify(loadUntilEnought) } $open_setting.fadeIn(1000) } q.moreNotify(loadUntilEnought); o.notify = false }, bind: function () { var f = { notify: true, friendRequest: true, secretMessage: true }; j.off('click').on('click', function (e) { var b = $(this); var c = b.data('sub'); var d = $('#' + c); q.showSubmenu(d); e.preventDefault(); switch (c) { case 'frdreq-screen': if (f.friendRequest) { getFriendRequest(function (a) { if (a.status) { d.find('.submenu-ul').html(a.html); q.friend.init() } else { d.find('.load-more-notify').text('เธขเธฑเธเนเธกเนเธกเธตเธเธณเธเธญเน€เธเนเธเน€เธเธทเนเธญเธ').addClass('screen-empty').removeClass('load-more-notify') } }); f.friendRequest = false } break; case 'secretmsg-screen': if (f.secretMessage) { getMoreSecretMessage(function (a) { if (a.status) { d.find('.submenu-ul').html(a.html) } else { d.find('.load-more-notify').text('เธขเธฑเธเนเธกเนเธกเธตเธเนเธญเธเธงเธฒเธกเธฅเธฑเธ').addClass('screen-empty').removeClass('load-more-notify') } }); f.secretMessage = false } break } }); $sub1_panel.find('.lookback').off('click').on('click', function (e) { e.preventDefault(); q.hideSubmenu() }); var g; $panel_self.find('.l-writer-update').on('mouseenter', function () { g = setTimeout(function () { var a = $(this).off('mouseenter'); clearCountstory(function () { a.find('.bubble').hide() }) }, 3 * 1000) }).on('mouseleave', function () { clearTimeout(g) }); $panel_self.data('callback', function (a) { if (o.self) { ajaxAPI({ data: { request: 'self.clear' }, complete: function () { q.clearBubbleSelf(); o.self = false } }) } q.hideSubmenu() }); $panel_notify.data('callback', function (a) { if (a === 'show' && o.notify) { q.makeAllNotifyAsSeen(); if (f.notify) { q.reload(); f.notify = false } } }); $notify_viewport.off('scroll').on('scroll', function () { var a = $(this); var b = a.children().height() - a.height(), hi = a.scrollTop(); clearTimeout(p.moreNotify); if (hi + 10 > b) { p.moreNotify = setTimeout(function () { q.moreNotify() }, 1000) } }); var h = false; $open_setting.hide().data('current', 'list').off('click').on('click', function (e) { e.preventDefault(); var b = $(this); var c = b.data('current'); if (c === 'list') { $subcol_setting.show(); m.hide(); b.data('current', 'setting').text('เธ”เธนเธเธฒเธฃเนเธเนเธเน€เธ•เธทเธญเธ'); if (!h) { h = true; ajaxAPI({ data: { request: 'notification.loadSetting' }, success: function (a) { $subcol_setting.html(a.html) } }) } } else { m.show(); $subcol_setting.hide(); b.data('current', 'list').text('เธเธฒเธฃเธ•เธฑเนเธเธเนเธฒ') } }); $(t).resize(function () { clearTimeout(p.resize); p.resize = setTimeout(function () { q.dimension() }, 100) }) }, showSubmenu: function (a) { var s = $sub1_viewport.width(); $sub1_panel.hide(); a.show().css('left', s); $sub1_viewport.animate({ left: -1 * s }, 250); var b = a.data('callback'); if (typeof b === 'function') b() }, hideSubmenu: function () { $sub1_viewport.animate({ left: 0 }, 250, function () { $sub1_panel.hide() }) }, makeAllNotifyAsSeen: function () { var a = $panel_notify.find($bubble), r; function successCallback() { q.clearBubbleNotify(); clearTimeout(r); k.children('.unseen').removeClass('unseen') }; function loading() { if (a.text().length >= 3 || !isNaN(a.text())) a.text(''); a.text(a.text() + 'ยท'); r = setTimeout(loading, 500) }; loading(); clearUnreadStatus(successCallback) }, clearBubbleSelf: function () { q.bubble($panel_self, 0) }, clearBubbleNotify: function () { q.bubble($panel_notify, 0) }, addNotify: function (b) { var c = 400, _this = this; var d = k.add(l).children('.notify-hash-' + b._hash).fadeOut(c); var e = $(b.html).hide(); setTimeout(function () { d.remove(); k.prepend(e); e.slideDown(c, function () { makeTimesince(); makeHooknotify(); _this.dimension() }); var a = _this.bubble(e) ? (d.filter('.unseen').size() ? 0 : 1) : 1; _this.bubble(e, '+' + a); _this.popupNotify($(b.html)); w.offset += a; o.notify = true }, c) }, popupNotify: function (c) { var d = 5 * 1000; var e = 5 * 1000; var f = 'popupNotify-updated', REMOVING = 'popupNotify-removing', INCOMING = 'popupNotify-incoming'; function enqueue(b) { b.each(function () { var a = $(this); a.data('serene', setTimeout(function () { a.addClass(REMOVING); if (l.children(':not(.' + REMOVING + ')').size() === 0) { $popup_panel.fadeOut(d) } else { a.fadeOut(d) } a.data('serene', setTimeout(function () { a.remove() }, d)) }, e)) }) } l.prepend(c.addClass(INCOMING).hide()); c.off('mouseenter').on({ mouseenter: function () { var a = $(this); if (!a.hasClass(f)) { a.addClass(f); var b = a.data('id'); readNotify(b, function () { q.readNotify(b); a.removeClass('unseen noread') }) } } }).slideDown(400, function () { enqueue(c.removeClass(INCOMING)) }).find('.closebtn-symbol').on({ click: function () { c.remove(); if (l.children().size() === 0) { $popup_panel.hide() } } }); l.off('mouseenter mouseleave').on('mouseenter', function () { l.children().each(function () { var a = $(this).removeClass(REMOVING); clearTimeout(a.data('serene')) }); l.children(':not(.' + INCOMING + ')').stop().show().fadeTo(1, 1); $popup_panel.stop().show().fadeTo(1, 1) }).on('mouseleave', function () { p.popup = enqueue(l.children()) }); $popup_panel.stop().show().fadeTo(1, 1) }, readNotify: function (a) { var b = k.find('.notify-id-' + a); if (b.hasClass('noread')) { q.bubble(k, '-1') } b.removeClass('unseen noread') }, moreNotify: function (b) { var c = this; getMoreNotify(function (a) { if (a.status) { k.append(a.html); makeTimesince(); makeHooknotify(); c.dimension() } else { $panel_notify.find('.load-more-notify').hide(); $panel_notify.find('.no-more-notify').show() } if (typeof b === 'function') b() }) }, dimension: function () { var a = 600, min = 100; var h = Math.max(Math.min($(t).height() - 200, a), min); $panel_notify.find('.viewport-overflow').css({ 'max-height': h }) }, setNotifyBubble: function (a) { q.bubble($panel_notify, a) }, bubble: function (a, b) { var c = (typeof a === 'string' ? $(a) : a).closest($panel).find($bubble).removeClass('three-digits'); if (typeof b !== 'undefined') { if (typeof b === 'string' && (b.indexOf('+') >= 0 || b.indexOf('-') >= 0)) { var d = c.html(); b = parseInt(b) + (isNaN(d) ? 0 : parseInt(d)) } c.data('amount', b); if (b > 99) { b = '99+'; c.addClass('three-digits') } c[b ? 'show' : 'hide']().text(b); this.title() } else if (!c.data('amount')) { c.data('amount', parseInt(c.html())) } return c.data('amount') }, title: function (n) { var c = this; if (typeof n != 'number') { n = 0; $bubble.each(function () { var a = $(this); var b = a.data('amount'); if (!b) { b = parseInt($(this).html()); a.data('amount', b) } if (!isNaN(b)) { n += b; c.title(n) } if (b <= 0) a.hide() }) } else { var d = $('title'); var e = d.text().replace(/^(\()(([0-9]+|\*))(\))/, ''); var f = n > 0 ? '(' + (n > 999 ? '999+' : n) + ') ' : ''; $(u).attr("title", f + e) } return this }, friend: { $bubble: null, init: function () { this.$bubble = $('#usermenu').find('.frireq-bubble'); this.bind() }, bind: function () { var g = this; $('#frdreq-screen').find('.frireq-li').each(function () { var e = $(this); var f = function (a) { var b = $('<div>', { Class: 'frdreq-loading' }); a = a.closest('.frireq-li'); a.children().hide(); a.prepend(b); return b }; e.find('.approve').off('click').on('click', function () { var a = $(this); var c = f(a); var d = a.data('aliasname'); g.accept(a.data('_id'), a.data('request_id'), function (a) { if (a.status) { var b = a.msg == 'true' ? '<b>เธเธธเธ“</b>เธเธฑเธ<b>' + d + '</b>เนเธ”เนเน€เธเนเธเน€เธเธทเนเธญเธเธเธฑเธเนเธฅเนเธง' : a.msg; c.replaceWith($('<p>', { Class: 'screen-msg', html: b })) } else { c.siblings().show(); c.remove() } }) }); e.find('.ignore').off('click').on('click', function () { var a = $(this); var c = f(a); g.deny(a.data('_id'), a.data('request_id'), function (b) { if (b.status) { c.siblings().show(); a.closest('.frireq-li').fadeOut() } c.remove() }) }) }) }, reload: function () { getFriendRequest(function (a) { if (a.status) { $('#frdreq-screen').find('.submenu-ul').html(a.html); q.friend.init() } }) }, accept: function (b, c, d) { $.ajax({ url: 'http://my.dek-d.com/user/friend/xmlhttp_approvefriend.php', data: { request_id: c, ff_desc: 'เน€เธเธทเนเธญเธเนเธ Dek-D.com', ff_gang: 5, ff_know: 9, ff_know_detail: '' }, dataType: 'jsonp', success: function (a) { if (typeof d === 'function') d(a) }, complete: function () { } }) }, deny: function (b, c, d) { $.ajax({ url: 'http://my.dek-d.com/user/friend/reject_friend.php', data: { request_id: c }, dataType: 'jsonp', success: function (a) { if (typeof d === 'function') d(a) }, complete: function () { } }) } }, notifyOnOff: { cookieName: 'NODENOTIFYONOFF', _status: null, _wait: false, status: function () { return this._status }, STATUS: { ON: 1, OFF: 0 }, btn: $(), init: function () { this.btn = $('.notify_on-off'); if (this.cookie() == this.STATUS.ON) { this.on() } else { this.off() } this.bind() }, bind: function () { var b = this; b.btn.on('click', function () { if (b._wait) return; var a = $(this).data('status') == b.STATUS.ON; if (a) { b.wait(function () { b.off() }) } else { b.wait(function () { b.on() }) } }) }, wait: function (a) { var b = this; b._wait = true; b.btn.addClass('wait'); b.btn.find('.btn').html('เธเธณเธฅเธฑเธเธ•เธฑเนเธเธเนเธฒ'); if (typeof a == 'function') { setTimeout(function () { a(); b.btn.removeClass('wait'); b._wait = false }, 100) } else { b.btn.removeClass('wait'); b._wait = false } }, on: function () { this.btn.removeClass('wait').removeClass('off').addClass('on').data('status', this.STATUS.ON); this.btn.find('.btn').html('เน€เธเธดเธ”'); this.cookie(this.STATUS.ON); this._status = true }, off: function () { this.btn.removeClass('wait').removeClass('on').addClass('off').data('status', this.STATUS.OFF); this.btn.find('.btn').html('เธเธดเธ”'); this.cookie(this.STATUS.OFF); this._status = false }, cookie: function (a) { var b = typeof myCookie == 'object' ? myCookie : { set: function () { }, get: function () { return this.STATUS.ON } }; if (typeof a == 'undefined') { var r = b.get(this.cookieName); return r == null || isNaN(r) ? 1 : parseInt(r) } else { b.set(this.cookieName, a, 0) } return this } } }; return createObject(q) })() }(jQuery, window, document)); (function ($, a, b) { use_IOListener(function () { IOListener.on('auth/stateChange.loadLogin', function () { toolbar.auth() }) }); $('body').on({ 'authStateChange': function () { }, 'isLogin': function () { }, 'isLogout': function () { } }) }(jQuery, window, document));